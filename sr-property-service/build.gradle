mainClassName = 'com.mg.smartrent.property.PropertyApplication'

jar {
    manifest {
        attributes manifestAttributes(mainClassName)
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

    implementation "com.mg.smartrent:domain-model:${project['mg-domain-model.version']}"
    implementation "com.mg.platform:persistence:${project['mg-persistence.version']}"
    implementation "org.valid4j:valid4j:${project['valid4j.version']}"

}

def dockerFileDir = projectDir
def dockerImageName = "${project.property("dockerRepoName")}/$project.name:$project.version"

task removeDockerContainer(group: 'docker') {
    doLast { removeDockerImage(dockerImageName) }
}

task buildDockerContainer(group: 'docker') {
    doLast {
        def distZip = new File("$buildDir/distributions").listFiles().find { it.name.endsWith(".zip") }
        def targetDockerDistDir = new File("$buildDir/distributions-docker")
        prepareDockerImage(distZip, targetDockerDistDir)
    }

    doLast { buildDockerImage(projectDir, dockerImageName) }
}


test {
    maxHeapSize = '1G'
}

build {
    finalizedBy { buildDockerContainer }
}

release {
    doLast { releaseDockerImage(dockerFileDir, dockerImageName) }
}
